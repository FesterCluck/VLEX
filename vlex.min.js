/*! VLEX v0.1 | (c) 2014 Stefan Keim (indus) | https://github.com/indus/VLEX/blob/master/license.md */
var VLEX = function (g) { var b = function a(b, c) { g.removeEventListener("resize", a.onresize); g.removeEventListener("mousemove", a.onmousemove); if (null !== b) return a.el = "string" == typeof b || b instanceof String ? document.getElementById(b) : b || document.body || document, c = c || {}, a.$ = c.$ || a.$, !1 !== c.onresize && g.addEventListener("resize", a.onresize), a.$.x = a.$.x || a.el.clientWidth || a.el.parentNode.clientWidth, a.$.y = a.$.y || a.el.clientHeight || a.el.parentNode.clientHeight, a.$.cX = a.$.x / 2, a.$.cY = a.$.y / 2, c.onmousemove && (g.addEventListener("mousemove", a.onmousemove), a.$.mX = a.$.mY = -99999), a.update(), a.update }; b.onresize = function (a) { b.$.x = b.el.clientWidth || b.el.parentNode.clientWidth; b.$.y = b.el.clientHeight || b.el.parentNode.clientHeight; b.$.cX = b.$.x / 2; b.$.cY = b.$.y / 2; b.update() }; b.onmousemove = function (a) { b.$.mX = a.pageX - b.el.parentNode.offsetLeft; b.$.mY = a.pageY - b.el.parentNode.offsetTop; b.update() }; var p = /({.*?})/, q = /{(.*?)}/, r = /\$([a-z0-9]*)/g, s = /\r?\n|\r/g, t = RegExp("(" + Object.getOwnPropertyNames(Math).join("|") + ")", "g"); b.update = function ($, g) { var c = b.el; $ = $ || b.$; if (c) for (var c = c.querySelectorAll("[vlex]"), l = 0, u = c.length; l < u; l++) { var e = $.$ = c[l]; if (!e.vlexps || g) { var d = e.getAttribute("vlex").split(";"), m, h; e.vlexps = {}; for (var f = 0, v = d.length; f < v; f++) if (d[f] = d[f].split(":"), 1 < d[f].length) { m = d[f].shift().trim(); h = d[f].join(":").replace(s, "").replace(t, "Math.$1").replace(r, "$.$1").trim().split(p); for (var k = 0, w = h.length, n; k < w; k++) h[k] = (n = q.exec(h[k])) ? "(" + n[1] + ")" : '"' + h[k] + '"'; e.vlexps[m] = h.join("+") } } for (d in e.vlexps) e.setAttribute(d, eval(e.vlexps[d])) } }; b.$ = {}; return b }(window);