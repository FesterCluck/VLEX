/*! VLEX v0.2 | (c) 2014 Stefan Keim (indus) | https://github.com/indus/VLEX/blob/master/license.md */
var VLEX = function (g) { var c, m, a = {}, b = function d(b, e) { g.removeEventListener("resize", d.onresize); g.removeEventListener("mousemove", d.onmousemove); if (null !== b) return c = "string" == typeof b || b instanceof String ? document.getElementById(b) : b || document.body || document, e = e || {}, a = e.$ || a, !1 !== e.onresize && g.addEventListener("resize", d.onresize), a.x = a.x || c.clientWidth || c.parentNode.clientWidth, a.y = a.y || c.clientHeight || c.parentNode.clientHeight, a.cX = a.x / 2, a.cY = a.y / 2, e.onmousemove && (g.addEventListener("mousemove", d.onmousemove), a.mX = a.mY = -99999), d.update(), d.update }; b.$ = a; b.onresize = function (d) { a.x = c.clientWidth || c.parentNode.clientWidth; a.y = c.clientHeight || c.parentNode.clientHeight; a.cX = a.x / 2; a.cY = a.y / 2; b.update() }; b.onmousemove = function (d) { a.mX = d.pageX - c.parentNode.offsetLeft; a.mY = d.pageY - c.parentNode.offsetTop; b.update() }; var r = /({.*?})/, s = /{(.*?)}/, t = /\$([a-z0-9]*)/g, u = /\r?\n|\r/g, v = RegExp("(" + Object.getOwnPropertyNames(Math).join("|") + ")", "g"); b.update = function ($, g) { $ = $ || b.$; if (c) { m = m && !g ? m : c.querySelectorAll("[vlex]"); for (var e = 0, w = m.length; e < w; e++) { var h = $.$ = m[e]; if (!h.vlex || g) { var f = h.getAttribute("vlex").split(";"), p, l; h.vlex = {}; for (var k = 0, x = f.length; k < x; k++) if (f[k] = f[k].split(":"), 1 < f[k].length) { p = f[k].shift().trim(); l = f[k].join(":").replace(u, "").replace(v, "Math.$1").replace(t, "$.$1").trim().split(r); for (var n = 0, y = l.length, q; n < y; n++) l[n] = (q = s.exec(l[n])) ? "(" + q[1] + ")" : '"' + l[n] + '"'; h.vlex[p] = l.join("+") } } for (f in h.vlex) h.setAttribute(f, eval(h.vlex[f])) } } }; return b }(window);